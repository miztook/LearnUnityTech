高级组合控件，可以实现常用app的复杂效果

7.1 标签栏
	7.1.1 标签按钮
		用style来自定义TabButton
	
	7.1.2 实现底部标签栏
		TabActivity  附带TabHost, TabWidget两个控件
		AcitivityGroup toActivity开一个新的activity
		FagmentActivity addTab, getTabView
		
例子代码:
		标签按钮:
		layout: 	group/res/layout/activity_tab_button.xml 
			//定义一个TextView,其中textColor和drawableTop使用了selector状态图形
		code:  group/java/com.example.group/TabButtonActivity.java
			//在checkbox勾选后，通过设置textView的选中状态实现效果
		
		标签页面:
		layout: 	group/res/layout/activity_tab_host.xml 	
			//在RelativeLayout外层使用TabHost,底部使用TabWidget
			//底部创建三个LinearLayout，用TextView实现标签效果		
		code:  group/java/com.example.group/TabHostActivity.java	
			//tab_host.addTab添加三个Activity和状态图标selector
			//通过setCurrentTabByTag选择当前标签
		
		页面组:
		layout: 	group/res/layout/activity_tab_group.xml 					
		code:  group/java/com.example.group/TabGroupActivity.java
			//在切换页签时，toActivity开启对应的activity，并将他放到内容视图中
			//底部三个页签实现页签的选择效果
		
		碎片标签页:
		layout: 	group/res/layout/activity_tab_fragment.xml 	
			//设置FragmentTabHost来管理页签
		code:  group/java/com.example.group/TabFragmentActivity.java
			//FragmentTabHost.setup方法 把实际的内容框架安装到碎片标签栏
			//FragmentTabHost.addTab添加标签栏
			//getTabView中， item_tabbar.xml生成标签按钮对象
		
7.2 导航栏
	7.2.1 工具栏Toolbar
		本质是一个ViewGroup
		
	7.2.2 溢出菜单OverflowMenu
		自定义菜单
	
	7.2.3 搜索框SearchView
		搜索框
	
	7.2.4 标签布局TabLayout
		TabLayout比PagerTabStrip有更丰富的样式
		newTab, addTab, getTabAt, setOnSelectedListener

例子代码:
		工具栏:
		layout: 	group/res/layout/activity_toolbar.xml 	
			//添加一个android.support.v7.widget.Toolbar控件
		code:  group/java/com.example.group/ToolbarActivity.java
			//Toolbar的一些熟悉和方法，定义外观
			//setNavigationOnClickListener设置导航事件
		
		溢出菜单:
		layout: 	group/res/layout/activity_overflow_menu.xml 					
		code:  group/java/com.example.group/OverflowMenuActivity.java	
			//在onCreateOptionsMenu中创建溢出菜单
			//在menu_overflow.xml中，app:showAsAction="ifRoom"表示有空间显示图标
			//app:showAsAction="never" 表示只在菜单栏显示
		
		搜索框:
		layout: 	group/res/layout/activity_search_view.xml 	
				group/res/layout/menu/menu_search.xml
			//第一个搜索菜单中，actionViewClass设置系统搜索栏
		code:  group/java/com.example.group/SearchViewActivity.java
			//SearchView的使用, SearchView.SearchAutoComplete的使用
			//SearchManager设置SearchResultActvity 把搜索信息传递给搜索结果页面
			//setOnQueryTextListener设置文本变化监听器,调用doSearch方法匹配一个自动完成adapter
			group/java/com.example.group/SearchResultActivity.java
			//搜索结果页面,如果intent.getAction()为ACTION_SEARCH，即表示是搜索打开
			
		定制工具栏:
		layout: 	group/res/layout/activity_toolbar_custom.xml 		
			//顶部Toolbar，定义两个TextView，一个文字描述统计日期，一个自定义两个shape的状态选择器
		code:  group/java/com.example.group/ToolbarCustomActivity.java
			//在日期的TextView被点击后，onClick里弹出一个自定义日期选择框，在onDataSet里响应
			//onCreateOptionsMenu创建 menu_overflow.xml 的溢出菜单，在onOptionsItemSelected中响应事件
		
		工具栏集成标签:
		layout: 	group/res/layout/activity_tab_layout.xml 		
			//Toolbar工具栏中添加一个 TabLayout控件，下面一个ViewPager实现翻页逻辑
		code:  group/java/com.example.group/TabLayoutActivity.java
			//tab_title.addTab添加两个tab标签，在onTabSelected函数中，标签切换时设置当前页面的显示
			//vp_content(ViewPager)设置适配器 GoodsPagerAdapter 继承自 FragmentPagerAdapter, 使用BookCoverFragment来定义外观
		
		工具栏定制标签:
		layout: 	group/res/layout/activity_tab_custom.xml 	
			//界面和上个例子一致
		code:  group/java/com.example.group/TabCustomActivity.java
			//在initTabLayout方法中，通过 tab_title.addTab(tab_title.newTab().setCustomView(R.layout.item_toolbar1)); 设置指定布局的标签
			//即标签可以使用自定义的布局
		
7.3 横幅条
	7.3.1 自定义指示器
		OnPageSelected, OnPageScrollStateChanged, OnPageScrolled
	
	7.3.2 实现横幅轮播Banner
	
	7.3.3 仿京东顶到状态栏的Banner
	
例子代码:
		自定义指示器:
		layout: 	group/res/layout/activity_banner_indicator.xml 	
			//设置一个com.example.group.widget.BannerIndicator控件
		code:  group/java/com.example.group/BannerIndicatorActivity.java
			//BannerIndicator.setImage 设置图像列表，实现滑动工具栏
			group/java/com.example.group/widget/BannerIndicator.java
				//BannerIndicator继承自RelativeLayout，initView读取 banner_indicator.xml的布局
				//一个ViewPager实现翻页功能，一个PageIndicator实现翻页时圆点的动画
				//ViewPager通过添加翻页适配器 ImageAdapater 继承自 PagerAdapter实现翻页功能，在翻页消息响应翻页时
				//PagerIndicator.setCurrent移动到对应的页面圆点位置
		
		广告图片轮播:
		layout: 	group/res/layout/activity_banner_pager.xml 	
			//设置一个 BannerPager 控件
		code:  group/java/com.example.group/BannerPagerActivity.java	
			//BannerPager.setImage 设置图像列表，实现滑动工具栏
			group/java/com.example.group/widget/BannerPager.java
			//BannerPager继承自RelativeLayout，initView读取 banner_pager.xml的布局
			//ViewPager通过添加翻页适配器 ImageAdapater 继承自 PagerAdapter实现翻页功能
			//在start, stop方法中，开关mScroll一个延迟过程动画，scrollToNext，每隔2秒翻页到下一个页面
		
		轮播图顶到头部:
		layout: 	group/res/layout/activity_banner_top.xml 					
		code:  group/java/com.example.group/BannerTopActivity.java
			//在onClick中，通过StatusBarUtil.reset 和 StatusBarUtil.fullscreen 恢复和占据状态栏，了解即可
		
7.4 增强型列表 常用
	7.4.1 循环视图RecyclerView
		setAdapter RecyclerView.Adapter
		setLayoutManager  (LinearLayoutManager, GridLayoutManager, StaggeredGridLayoutManager)
		setItemAnimator  列表项的增删动画
		
		RecyclerView.Adapter 必须重写的方法 getItemCount, onCreateViewHolder, onBindViewHolder
		
	7.4.2 布局管理器LayoutManager
	
	7.4.3 动态更新循环视图
		动态修改循环视图的数据，并且有动画
		
例子代码:
		线性列表布局:
		layout: 	group/res/layout/activity_recycler_linear.xml 	
			//添加一个android.support.v7.widget.RecyclerView
		code:  group/java/com.example.group/RecyclerLinearActivity.java
			//RecyclerView.setLayoutManager 设置布局管理器
			//设置Adapter, RecyclerLinearAdapter继承自RecyclerView.Adapter<ViewHolder>
			//RecyclerLinearAdapter的getItemCount，onCreateViewHolder,onBindViewHolder设置每一项的界面
			//RecyclerView.setItemAnimator 设置动画效果
			//RecyclerView.addItemDecoration设置列表项之间的空白
		
		普通网格布局:
		layout: 	group/res/layout/activity_recycler_grid.xml 					
			//添加一个android.support.v7.widget.RecyclerView
		code:  group/java/com.example.group/RecyclerGridActivity.java	
			//RecyclerView.setLayoutManager 设置布局管理器
			//设置Adapter, RecyclerGridAdapter继承自RecyclerView.Adapter<ViewHolder>
			//RecyclerGridAdapter.onCreateViewHolder 设置 item_grid.xml为每一项布局
			//RecyclerGridAdapter.onBindViewHolder 设置每一项的资源，(图片，文字)
			
		合并网格布局:
		layout: 	group/res/layout/activity_recycler_combine.xml 
			//添加一个android.support.v7.widget.RecyclerView
		code:  group/java/com.example.group/RecyclerCombineActivity.java
			//在initRecyclerCombine方法中，GridLayoutManager创建一个4列的网格
			//GridLayoutManager.setSpanSizeLookup 设置网格的占位规则，1,2项占据两列
			//在RecyclerCombineAdapter.onBindViewHolder方法中，对1,2位置设置更高的layout高度
		
		瀑布流网格布局:
		layout: 	group/res/layout/activity_recycler_staggered.xml 		
			//添加一个android.support.v7.widget.RecyclerView
		code:  group/java/com.example.group/RecyclerStaggeredActivity.java
			//RecyclerView设置一个LayoutManger为 StaggeredGridLayoutManager
			//设置Adapter, RecyclerStaggeredAdapter继承自RecyclerView.Adapter<ViewHolder>
			//RecyclerStaggeredAdapter设置item_staggered.xml为每一项布局
			//每一项的图片高度不同，网格以瀑布方式垂直显示
		
		动态增删循环视图:
		layout: 	group/res/layout/activity_recycler_dynamic.xml 		
			//添加一个按钮，一个android.support.v7.widget.RecyclerView
		code:  group/java/com.example.group/RecyclerDynamicActivity.java		
			//设置Adapter, LinearDynamicAdapter继承自RecyclerView.Adapter<ViewHolder>
			//LinearDynamicAdapter显示的数据为 ArrayList<GoodsInfo> mPublicArray，
			//在mPublicArray变化时，添加数据调用 LinearDynamicAdapter.notifyItemInserted，删除数据调用 LinearDynamicAdapter.notifyItemRemoved
			//这样LinearDynamicAdapter会根据数据变化做出数据增删的动画
	
7.5 材质设计库  (高级效果，了解即可)
	7.5.1 协调布局CoordinatorLayout
	
	7.5.2 应用栏布局AppBarlayout
	
	7.5.3 可折叠工具栏布局CollapsingToolbatLayout
	
7.6 仿支付宝的头部伸缩特效

7.7 仿淘宝主页
例子代码:
		下拉刷新布局:
		layout: 	group/res/layout/activity_swipe_refresh.xml 			
				//使用系统控件 android.support.v4.widget.SwipeRefreshLayout，控制ScrollView的滚动显示
		code:  group/java/com.example.group/SwipeRefreshActivity.java
				//SwipeRefreshLayout.setOnRefreshListener 设置刷新事件响应 onRefresh
				//onRefresh后，开始一个2秒的延迟动画，调用 SwipeRefreshLayout.setRefreshing(false) 结束刷新动画
		
		循环下拉刷新:
		layout: 	group/res/layout/activity_swipe_recycler.xml 		
				//SwipeRefreshLayout控件，控制一个 RecyclerView的滚动显示
		code:  group/java/com.example.group/SwipeRecyclerActivity.java	
				//结合7.4节最后一个例子
				//循环视图RecyclerView添加一个 LinearDynamicAdapter 适配器，实现一个可增删的列表现实
				//onRefresh后，开始一个2秒的延迟动画，调用 SwipeRefreshLayout.setRefreshing(false) 结束刷新动画
				//mRefresh过程中，刷新结束后，mAdapter.NotifyItemInserted通知有新项添加
		
		仿淘宝主页:
		layout: 	group/res/layout/activity_department_store.xml 			
				//上面一个 LinearLayout 作为container，下面实现三个tab切换
		code:  group/java/com.example.group/DepartmentStoreActivity.java
				//页面切换 toAcitivty 方法，跳转到指定的 activity，分别是 DepartmentHomeActivity, DepartmentClassActivity, DepartmentCartActivity
				//DepartmentHomeActivity 商城首页 activity_department_home.xml，Toolbar, Banner, RecyclerView的使用
				//DepartmentClassActivity 分类 activity_department_class.xml ， Toolbar TabLayout, ViewPager使用FragmentPagerAdapter的用法
				// ClothesFagment 使用了 StaggeredGridLayoutManager 垂直瀑布布局
				//DepartmentCartActivity 购物车页面