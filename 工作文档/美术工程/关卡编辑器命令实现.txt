菜单SceneEditor
		加载
			读取EditorMaps目录下的xml, 表示每个编辑的场景 branchTid表示是否有分支场景
			当选取其中一个场景后，调用CopyTargetSceneAndOpenCopy
				打开固定的场景EditorMaps.unity 删除所有gameobject
				加载Assets/Outputs/Scenes下的场景文件prefab
				加载编辑数据的Prefab (EditMaps同xml下的prefab目录)		启用LevelController
				加载场景所有的分块prefab
		
		创建
		
		添加对象
		

		保存
			配置文件
				导出CSV配置文件

				导出Lua配置文件
					功能: 	把Scene.data的数据导出成每个场景id命名的lua
							导出LinkToScene.lua			//导出每个场景包括的monster, npc, mine的id配置 他们属于哪个场景

				导出Lua副本配置文件
					功能： 	导出副本结算的位置到 MapDungeonEnd.lua		//读取EditMaps下的场景prefab的LevelTargetPointPrefab组件

				导出Lua传送配置文件
					功能： 导出地图连接配置文件 MapLinkInfo.lua //判断地图之间是否可直达，如果不可直达找到提供传送服务的npc 

				导出Lua冒险指南配置文件
					功能： 导出活动配置文件 ActivityBasicInfo.lua			//弃用	
					
				导出怪物胶囊体半径
					功能： 给Monster.data添加胶囊体半径字段，数值取怪物模型的CapsuleCollider.radius值

				导出区域和碰撞文件(服务器)
					功能: 导出每个地图的区域和阻挡的文件(服务器使用) .regionset 和 .obstacleset
					
					
				客户端中生成的lua文件 
					执行M1Client下的 生成GameRes下Data辅助的Lua表.bat 在 GameRes\Configs 下生成
					AdventureGuideBasicInfo.lua			//冒险指南配置文件
					WingLevelUpData.lua					//翅膀升级配置文件
	
	
LevelController概述	场景编辑器的核心组件
		包括子节点
			Monster							//创建 LevelMonsterPrefab 和 LevelMosnterGenerator
			Npc								//创建 LevelNpcPrefab 和 LevelNpcGenerator
			Obstacle						//创建 LevelObstaclePrefab 和 LevelObstacleGenerator
			Mine							//创建 LevelMinePrefab 和 LevelMineGenerator
			BezierCurve						//创建 LevelBezierCurvePrefab 和 LevelBezieerNodePrefab
			Region							//设置 LevelRegionPrefab的region prefab位置
			Position						//创建 LevelPositionPrefab 设置出生点和复活点
			TargetPoint						//创建 LevelTargetPointPrefab
			PortalRegion					//创建 LevelPortalRegionPrefab
			PhaseMove						//创建 LevelPhaseMoveGenerator边长生成器，然后生成区域Region
			Point
			
	
