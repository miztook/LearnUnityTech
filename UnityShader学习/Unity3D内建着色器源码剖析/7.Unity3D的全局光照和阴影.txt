全局照明
		直接照明	光与被照亮物体之间的关系
		间接照明	光从一个物体表面传递到另一个物体的关系
局部照明
		只考虑直接照明
		环境光		模拟间接照明的效果
		
GI通常关注的是间接照明
		静态物体
			静止不动的物体预先进行间接光照计算，存储到光照图中  Baked GI
			也可以预计算和光照方向无关的信息，在运行时再进行最终光照计算  Precomputed realtime GI
		运动物体
			光照探针 light probe 拾取静态物体的反射光
				在场景中某个点，在烘培或预计算阶段探测光线，记录相关光照信息
				在运行时，运动物体从离最近的光探针中
			
7.2 光源类型
		点光源
		聚光灯
		有向平行光		Sun Source
		区域面光源		仅用于烘培
		cookie			遮蔽一部分光线，透过一部分光线，灰度图
		
7.3 实时模式光源进行全局照明
		enlighten预计算实时照明
		
7.4 烘培光照贴图进行全局照明
		优点：	
				1) 高质量的阴影在静态物体之间，在光照图中
				2) 间接光照
				3) 所有静态物体光照都在一个光照图中，从shader获取
		缺点:
				1) 没有实时光照 (高光效果)
				2) 没有动态物体到静态物体的阴影
				3) 静态物体到动态物体的阴影，只能用低精度的光探针
				
7.5 混合光照进行全局照明
		Baked Indirect
			仅对间接照明部分预计算，阴影实时计算 (动态物体 + 静态物体)
			
		ShadowMask
			预计算从静态物体到其他静态物体的阴影 (间接照明贡献的阴影)，存储在一个单独的阴影蒙版纹理中 不受shadow distance限制
			静止物体到动态物体的阴影，使用光探针
			运动物体投射到阴影可以和阴影蒙版中的阴影混合 (优点)
		
		Subtractive
			直接照明被烘培进光照贴图，unity不会在运行时进行任何光照计算
			有向平行光源是唯一光源，运动物体实时投射阴影到静态物体
			无法保证烘培的阴影和实时阴影能正确融合

7.6 光照探针照明的细节
		光照探针在某个位置对光照信息采样，根据插值运算，得到某个点的光照信息 (三阶球谐函数)
		在大物体表面，球谐函数不适用，用Light Probe Proxy Volume
		反射探针		生成立方体贴图
		
球谐光照
		unity_SHAr, unity_SHAg, unity_SHAb,
		unity_SHBr, unity_SHBg, unity_SHBb, unity_SHC
		在预计算阶段，光探针把某一点的球谐系数编码进一个立方体纹理中，
		在运行时从立方体纹理中采样得到系数，根据法线计算出光照效果
		
7.8 引擎中的渲染阴影的功能		
	光源空间确定产生阴影的区域
		1. 用光源相机对场景执行一次取景操作，不做任何绘制处理，把可见片元的深度信息存储在一个帧缓冲区，称为阴影贴图
		2. 在真正渲染时，把每一个片元再次放到光源相机角度下去计算深度值，如果深度更远，就表示落在阴影区域了
	屏幕空间确定产生阴影的区域
		1. 在当前摄像机位置处进行取景操作，不做任何绘制处理，把可见片元的深度信息存储在一个深度纹理中 (第一步纹理)
		2. 用光源相机对场景执行一次取景操作，不做任何绘制处理，把可见片元的深度信息存储在一个帧缓冲区 (第二部纹理)
		3. 在屏幕空间中，当前摄像机做一个阴影收集：对要绘制的每一个片元，根据在第一步纹理中的深度值D1，反求得在世界空间中的坐标
			接着把坐标从世界空间转换到光源空间得到阴影坐标，在第二步纹理中进行采样，得到深度值D2，如果D1>D2，表示在阴影内。
			最后计算阴影时，只要片元在屏幕空间中的位置，对生成的屏幕空间阴影进行采样即可。
	透视走样和层叠式阴影贴图
		近距离阴影的锯齿问题
		层叠式阴影贴图，将摄像机的ViewFrustum按一定比例分成若干层级，每个层级对应一个子Frustum，单独计算阴影贴图
		抖动 有时分辨率可能在帧之间发生突变	用包围球避免阴影的抖动问题 
		
				


