11.1 标准着色器中的各项材质属性
	Rendering Mode
	Albedo		材料本身的颜色
	Metal		金属度，表示对能量反射的强弱	金属的高光颜色和漫反射相关
	Smoothness		光滑度(粗糙度)
	Normal Map
	Height Map		Parallax Map 视差贴图
	Occlusion 		某些区域接受的间接照明要强烈些，某些区域暗淡些
	Emission		Global Illumination是否参与全局照明
	Secondary Map		Detail Albedo 和 Normal Map 细节纹理
	Detail Mask		Mask图

11.2 Standard.shader中的属性变量

11.3 第一个SubShader的前向通路
	简化版
		VertexOutputBaseSimple	vertForwardBaseSimple(VertexInput v)
			给frag传递 eyeVec, ambientOrLightmapUV, ShadowCoords, FogCoords, normalWorld, tangentSpaceLightDir, tangentSpaceEyeVec
			TangentSpaceLightingInput计算切线空间下的 lightDir, EyeVec
			VertexGIForward	要么得到光照贴图的uv坐标，要么得到球谐函数作用在物体上的光线RGB值(ambient)
			ambient值的计算: ShadeSH9, ShadeSH3Order, Shade4PointLights
			
		half4	fragForwardBaseSimpleInternal(VertexOutputBaseSimple i)
			填充FragmentCommonData		//diffuseColor, specColor, oneMinusReflectivity, smoothness, normalWorld, eyeVec, posWorld, alpha
			UNITY_SETUP_BRDF_INPUT
			MetallicSetup		
				MetallicGloss 获取 metallic, smoothness
				DiffuseAndSpecularFromMetallic 获取 diffColor, specColor, oneMinusReflectivity 
				PreMultiplyAlpha 计算diffuseColor, alpha
				其他 normalWorld, eyeVec, posWorld
			MainLightSimple 	设置主光源
			如果用normalmap，在切线空间计算 ndotl
			计算阴影的衰减值  实时 + 烘培
			Occlusion 计算遮蔽项系数
			FragmentGI				//获取物体的直接照明和间接照明的信息
				先填充UnityGIInput		//light, worldPos, worldViewDir, atten, ambient, lightmapUV
				UnityGlobalIllumination
			BRDF_Indirect计算间接部分照明的颜色值
			BRDF_DirectSimple计算直接照明部分的颜色值
			叠加Emission, UNITY_APPLY_FOG, alpha设置
					
	标准版
		VertexOutputBaseSimple	vertForwardBase(VertexInput v)
			和vertForwardBaseSimple相比，增加了构建顶点的切线空间操作，在vertForwardBaseSimple中执行的计算fresnel和grazy系数都不在顶点着色器，而是延后至片元着色器
		
		half4	fragForwardBaseInternal(VertexOutputBaseSimple i)
			填充FragmentCommonData		//IN_VIEWDIR4PARALLAX, IN_VIEWDIR4PARALLAX_FWDADD, IN_WORLDPOS
			UNITY_SETUP_BRDF_INPUT
			PerPixelWorldNormal			//从normalmap获取切线空间下的法线，变换到世界空间
			NormalizePerPixelNormal
			MainLight 设置主光源
			UNITY_LIGHT_ATTENUATION		//光线到达片元的衰减值
			Occlusion 计算遮蔽项系数
			FragmentGI				//获取物体的直接照明和间接照明的信息
			UNITY_BRDF_PBS			//计算片元的直接照明和间接照明的值
			叠加Emission, UNITY_APPLY_FOG, alpha设置
		
11.4 第一个SubShader的FORWARD_DELTA通路
	简化版
		verForwardAddSimple
		fragForwardAddSimpleInternal
			BRDFDirectSimple
		
	标准版
		AdditiveLight
		UNITY_BRDF_PBS

11.5 第一个SubShader的ShadowCaster通路
		vertShadowCaster
			UnityClipSpaceShadowCasterPos		//应用unity_LightShadowBias
		fragShadowCaster	
			SHADOW_CASTER_FRAGMENT
			半透明物体的阴影贴图处理
11.6 第一个SubShader的延迟通路

11.7 第一个SubShader的元渲染通路
	Enlighten使用辐射度算法，主要针对漫反射部分，对镜面反射部分在烘培时，难以计算其对间接照明部分的影响
	Unity3D使用meta pass的方式对这部分间接照明进行补偿
	Enlighten需要Unity3D提供物体表面材质的反照率贴图和自发光贴图		//UnityLightmappingAlbedo, Emission

11.8 UnityStandardInput.cginc 的结构体，着色器变量，宏和函数
	_TANGENT_TO_WORLD			//使用了_NORMALMAP, _PARALLAXMAP, DIRLIGHTMAP_COMBINED 时开启
	_DETAIL
	TexCoords			//_MainTex, _DetailAlbedoMap
	DetailMask			//_DetailMask
	Albedo					//处理albedo和细节贴图操作
	Alpha
	Occlusion				//处理OcclusionMap
	MetallicGloss		//获取金属度和平滑度
	Emission				//处理EmissionMap
	NormalInTangentSpace		//UnpackScaleNormal从BumpMap解包出法向量，然后用_DetailMask和detailMap的normal进行插值
	Parallax			//处理_ParallaxMap, offset

11.9 UniytStandardUtils.cginc 的结构体，着色器变量，宏和函数
	PreMultiplyAlpha
	OneMinusReflectivityFromMetallic				//根据金属值计算1-反射比例 (漫反射比例)
	DiffuseAndSpecularFromMetallic					//从Metallic得到高光反射颜色，得到漫反射颜色
	LerpWhiteTo				//在颜色和白色之间插值
	LerpOneTo
	ParallaxOffset1Step
	UnpackScaleNormalRGorAG
	UnpackScaleNormal
	BlendNormals				//两个向量x,y相加，z相乘，然后normalize
	CreateTangentToWorldPerVertex		//每个顶点创建切线空间，根据tangent, normal 计算 binormal
	ShadeSHPerVertex
	ShadeSHPerPixel

11.10 UnityImageBasedLighting.cginc 的结构体，着色器变量，宏和函数
	Unity_GlossyEnvironmentData 结构	roughness, reflUVW
	Unity_GlossyEnvironmentSetup		//reflect函数
	Unity_GlossyEnvironment

11.11 UnityGlobalIllumination.cginc 的结构体，着色器变量，宏和函数
	ResetUnityLight
	SubtractMainLightWithRealtimeAttenuationFromLightmap
	UnityGI_Base			//混合shadow, 设置gi.light.color衰减 	计算球谐光照设置 gi.indirect.diffuse, 或者从lightmap中取得 gi.indirect.diffuse
	UnityGI_IndirectSpecular		//直接设置 或者 从glossymap中根据光照探针的值计算
			物体之间的间接光照效果，就是物体材质对周围内容的发射
			
11.12 UnityStandardBRDF.cginc 的结构体，着色器变量，宏和函数
	PerceptualRoughnessToRoughness
	RoughnessToPerceptualRoughness
	SmoothnessToRoughness
	SmoothnessToPerceptualRoughness
	FresnelTerm
	FresnelLerp
	FresnelLerpFast
	DisneyDiffuse			//基于物理渲染的漫反射		perceptualRoughness
	SmithJointGGXVisibilityTerm		//BRDF的G 几何衰减因子系数		roughness
	GGXTerm				//BRDF的法线分布函数 	roughness
	BRDF3_Indirect				//间接光照的 diffuse + specular		specular计算简化
	BRDF3_Direct				//直接光照的diffuseColor + specular(从一个unity_NHxRoughness图中根据roughness取得)
	BRDF3_Unity_PBS			//BRDF3_Direct * lightcolor * nl (衰减)+ BRDF3_Indirect 
	BRDF2_Unity_PBS			//直接光照的 specular 用GGX计算specularTerm
	BRDF1_Unity_PBS			//直接光照漫反射的 diffuseTerm 用DisneyDiffuse，高光反射的 specularTerm (V*D*PI)和 FresnelTerm 求得
										//间接光照的高光用根据roughness计算的折射部分扣除

11.13 UnityGBuffer.cginc 的结构体，着色器变量，宏和函数

11.14 UnityMetaPass.cginc 的结构体，着色器变量，宏和函数
	输出albedo 和 emission，补偿间接光照的specular部分