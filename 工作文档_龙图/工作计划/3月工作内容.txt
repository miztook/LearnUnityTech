1. 代码整理
	整理 trunk, kr版本，tw版本的 Unity C#代码，能统一的统一，不同的标记区别，减少维护成本 (待做)
2. 关于CDN下载
	jup用不压缩模式，可大大提升解压速度，之前计算md5方式也有问题，修改这两项安装速度很快
	但在更新时，比如多个interface界面更新，压缩率很高(应该是多个interface ab里有相同文件内容)，压缩模式还需要保留
	现在策略是，首个更新版本不压缩，保证安装速度；后续更新时，如果压缩比小于75%，则使用压缩模式，否则使用不压缩模式 (已完成)
	生成的更新描述txt里，增加了压缩率显示 (已完成)
3. 下载时断点续传
	看了下，断点续传是http一个补充协议支持，应该可以实现 (待做)
4. 国内cbt版本合并
	在完成1的代码整理后，将CN的特定需求补充到cbt分支中，参考绿包中的相关资源改动 (也需要重新确认相关需求)
5. 打包问题
	打包和更新系统，计划做几个菜单命令项，每个菜单打包特定的资源(如Character, Outward, BlocksNew等)，快速测试打包的正确性
6. 现有美术资源测试
	由于现在游戏不能保证2G内存运行，要分析下现有美术资源包大小，可以按资源规则测试下缩小贴图后的大小和效果 (无需美术改动用AssetPostProcess方法)
7. 大量安卓设备播放视频卡住或不能播放的问题
	可能还是需要之前的插件 Easy Movie Texture，支持64位的版本需要购买 65刀，
	https://assetstore.unity.com/packages/tools/video/easy-movie-texture-video-texture-10032

1. 提高热更新的安装速度 (代价是ab不压缩，增加一定的下载量)
2. 断点续传 (下载过程中，关app，再进要继续之前的下载)
3. 后台下载 (国内版本需求，先做技术调研)
4. 国内分包 (拆分和优化现有美术资源，尽量保证一个2G以内可玩的安卓包)