https://zhuanlan.zhihu.com/p/380124248

简单的概况下就是如下几点：

	1. Playable API的一个目的就是为了代替Legacy动画系统的Animation组件，允许动画重定向、Blend Tree等原本不支持的功能。
	（Blend Tree是比较耗性能的，要慎用）

	2. 面向代码层，Playable API可以更直接的访问底层动画系统的接口，我们可以根据项目定制动画系统，而不是使用Animator。
	在Unity底层，驱动Playable Graph的实际上依然是Animator组件，但是我们完全可以像使用Animation组件一样使用Playable。

	3. 可以通过Playable来扩展Timeline的功能。

Playable与Animator的比较
	对于一些大型动作类游戏，往往会有很多的State或者Clip，并且Animator状态机是不允许运行时添加、删除动画的，它只能使用OverrideController来替换动画，这就可能导致需要一个巨大的Animator来满足所有可能的状态。
	
	而Playable它就允许在运行时创建、添加和删除Animation，这样也会使得我们的Playable结构非常的简单
	
	在Animator状态机中，是通过定义变量来间接控制权重的。而在Playable中，你可以直接控制动画的权重和时间以及其他属性
	
	Playable还有更强大的融合特性，可以在Clip和AnimatorController之间混合，甚至无数个AnimatorController之间混合。 我们完全可以混用Animator状态机和Playable
	
	
Playable
	AnimatorControllerPlayable
	AnimationMixerPlayable
	AnimationLayerMixerPlayable
	AnimationClipPlayable